print(nrow(data_train))
print(nrow(train$Resultado))
dtest <- xgb.DMatrix(data = as.matrix(data_test), label= test)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
library(MLmetrics)
library(VIM)
library(ggplot2)
library(dplyr)
library(readr)
library(caTools)
library(caret)
library(ROSE)
library(DMwR)
library(data.tree)
library(party)
library(randomForest)
library(pROC)
library(e1071)
# loading the dataset
setwd("/AI/medicina/")
data0  <- read.csv("bd61.txt")
## making sure all variables are numeric or factor
summary(data0)
str(data0)
class(data0$SEXO)
data0$SEXO <- as.numeric(data0$SEXO)
data0$ANTICOA <- as.numeric(data0$ANTICOA)
data0$Var3 <- as.numeric(data0$Var3)
summary(data0)
data_split <- createDataPartition(data0$Resultado, p = .7,
list = FALSE,
times = 1)
train <- data0[ data_split,]
test <- data0[-data_split,]
str(train)
str(test)
summary(train)
summary(test)
prop.table(table(data0$Resultado))
barplot(prop.table(table(data0$Resultado)),
col = rainbow(3),
ylim = c(0,1.1),
main = "Class Distribution")
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train1 <- as.matrix(data_train)
class(data_train1)
print(data_train)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
dtest <- xgb.DMatrix(data = as.matrix(data_test), label= test)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train1 <- as.matrix(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$sexo <- as.numeric(data_train$sexo)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$sexo <- as.numeric(data_train$sexo)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
str(data_train)
data_train$sexo <- as.numeric(data_train$sexo)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
dtest <- xgb.DMatrix(data = as.matrix(data_test), label= test)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
dtest <- xgb.DMatrix(data = as.matrix(data_test), label= test)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
test$SEXO <- as.numeric(test$SEXO)
test$IDADE <- as.numeric(test$IDADE)
test$IMC <- as.numeric(test$IMC)
test$ANTICOA <- as.numeric(test$ANTICOA)
test$TEMPO <- as.numeric(test$TEMPO)
test$Var3 <- as.numeric(test$Var3)
test$TM <- as.numeric(test$TM)
test$ASA <- as.numeric(test$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
dtest <- xgb.DMatrix(data = as.matrix(data_test), label= test)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
# We got very accurate model!!!! it predicts 96% correctly of test frauds!!!!!
data_test1 <- as.matrix(test)
dtest <- xgb.DMatrix(data = as.matrix(data_test1), label= test)
summary(test)
str(test)
str(data_test1)
dtest <- xgb.DMatrix(data = as.matrix(data_test1), label= test$Resultado)
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
test$SEXO <- as.numeric(test$SEXO)
test$IDADE <- as.numeric(test$IDADE)
test$IMC <- as.numeric(test$IMC)
test$ANTICOA <- as.numeric(test$ANTICOA)
test$TEMPO <- as.numeric(test$TEMPO)
test$Var3 <- as.numeric(test$Var3)
test$TM <- as.numeric(test$TM)
test$ASA <- as.numeric(test$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
data_test1 <- as.matrix(test)
summary(test)
str(test)
str(data_test1)
dtest <- xgb.DMatrix(data = as.matrix(data_test1), label= test$Resultado)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
library(xgboost)
train_smote4 <- SMOTE(Resultado ~ ., train, perc.over = 100, perc.under=200)
str(train_smote4)
train_smote4$Resultado <- as.numeric(train_smote4$Resultado)-1
str(train_smote4)
summary(train_smote4)
train_smote4$Resultado <- as.factor(train_smote4$Resultado)
summary(train_smote4)
summary(test)
data_train <- subset(train_smote4, select = -c(Resultado))
data_train$SEXO <- as.numeric(data_train$SEXO)
data_train$IDADE <- as.numeric(data_train$IDADE)
data_train$IMC <- as.numeric(data_train$IMC)
data_train$ANTICOA <- as.numeric(data_train$ANTICOA)
data_train$TEMPO <- as.numeric(data_train$TEMPO)
data_train$Var3 <- as.numeric(data_train$Var3)
data_train$TM <- as.numeric(data_train$TM)
data_train$ASA <- as.numeric(data_train$ASA)
test$SEXO <- as.numeric(test$SEXO)
test$IDADE <- as.numeric(test$IDADE)
test$IMC <- as.numeric(test$IMC)
test$ANTICOA <- as.numeric(test$ANTICOA)
test$TEMPO <- as.numeric(test$TEMPO)
test$Var3 <- as.numeric(test$Var3)
test$TM <- as.numeric(test$TM)
test$ASA <- as.numeric(test$ASA)
data_train1 <- as.matrix(data_train)
str(data_train)
class(data_train1)
print(data_train1)
data_test  <- subset(test, select = -c(Resultado))
dtrain <- xgb.DMatrix(data = as.matrix(data_train1), label= train_smote4$Resultado)
summary(dtrain)
print(nrow(train))
print(nrow(data_train))
print(nrow(train$Resultado))
data_test1 <- as.matrix(data_test)
summary(test)
str(test)
str(data_test1)
dtest <- xgb.DMatrix(data = as.matrix(data_test1), label= test$Resultado)
xgb_model <- xgboost(data = dtrain, # the data
nround = 200, # max number of boosting iterations
objective = "reg:linear")
pred_xgb <- predict(xgb_model, dtest)
print(pred_xgb)
auc <- roc(test$Resultado, pred_xgb)
print(auc)
# Let's visualize AUC
plot(auc, ylim=c(0,1), print.thres=TRUE, main=paste('AUC:',round(auc$auc[[1]],2)))
abline(h=1,col='blue',lwd=2)
abline(h=0,col='red',lwd=2)
# Calculating F2-measure
pred_xgb_final <- round(pred_xgb,digits=0)
f2score <- FBeta_Score(pred_xgb_final, test$Resultado, beta = 2)
cat('F2 Score:', f2score)
# F2 measure is 0.99 !!!!!!!!
predicted4 <- (round(pred_xgb,digits=0))
print(predicted4)
predicted4 <- as.factor(predicted4-1)
summary(predicted4)
actual <- as.factor(test$Resultado)
print(actual)
summary(actual)
class(actual)
class(pred_xgb)
print(predicted4)
confusionMatrix(predicted4 , actual)
# We got very accurate model!!!! it predicts 96% correctly of test frauds!!!!!
